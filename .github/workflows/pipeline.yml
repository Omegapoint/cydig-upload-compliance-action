name: Build and Authenticate
run-name: ${{ github.actor }} is testing out github actions
permissions:
  contents: read
  pages: write
  id-token: write
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout action
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
      - name: Install dependencies
        run: npm ci
        working-directory: ${{ github.workspace }}/uploadcompliancestatetask
      - name: Compile to Javascript
        run: npm run build
        working-directory: ${{ github.workspace }}/uploadcompliancestatetask
      - name: Run tests
        run: npm run testScript
        working-directory: ${{ github.workspace }}/uploadcompliancestatetask
      #- name: 'Az CLI login'
      #  uses: azure/login@v1
      #  with:
      #    client-id: ${{ secrets.AZURE_CLIENT_ID }}
      #    tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      #    subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      #- name: 'Run Azure CLI commands'
      #  run: az account show

      - name: Update URL variables
        run: |
          (Get-Content '${{ github.workspace }}/uploadcompliancestatetask/config.json') | Foreach-Object {
              $_ -replace '###urlupdate###', '$(vars.urlupdatecompliancestate)' `
                -replace '###urlread###', '$(vars.urlreadtoreadme)' `
                -replace '###urldashboard###', '$(vars.urldashboard)' `
                -replace '###readtoreadmeaccesskey###', '$(secrets.ReadToReadMeAccessKey)' `

              } | Set-Content '${{ github.workspace }}/uploadcompliancestatetask/config.json'
        shell: pwsh

      - name: 'Run Upload Compliance State'
        uses: ./
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          cydigConfigPath: ${{ github.workspace }}/cydigConfig.json
